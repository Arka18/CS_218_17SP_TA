#!/bin/bash
# CS 218, assignment #10 test script.

# ---------------------------------------------------------
# Initial checks.
#	Ensure executable file exists.

if [ -z $1 ]; then
	echo "Error, must provide executable file name."
	exit
fi
#
if [ ! -e $1 ] || [ ! -x $1 ]; then
	echo "Error, unable to find $1 executable file."
	exit
fi
#
# ---------------------------------------------------------
# Define script variables and function
#
bolded=`tput bold`
normal=`tput sgr0`
#
pause() {
	if [ "$1" = "skip" ]; then
		echo
	else
		echo
		echo -n "Press return to continue"
		read
		clear
	fi
}
#
# ---------------------------------------------------------
# skip command line arguments tests...
#
if [ ! "$2" == "ex" ]; then
#
# ---------------------------------------------------------
# Display initial page
#
clear
echo
echo
echo ${bolded}Assignment 10 - Error Testing Utility${normal}
echo
echo
echo
echo "Various tests should generate appropriate error messages."
echo
echo
echo "Note, this utility assumes the program is working or very"
echo "      close to working.  Testing on an incomplete"
echo "      program will not be useful."
echo
echo
pause $2
#
# ---------------------------------------------------------
# Begin tests.
#
echo
echo "------------------------------------"
echo "Error testing -> usage message"
echo "     $1 should show usage message"
echo
echo
echo ${bolded}$1${normal}
./$1
echo
#
echo ${bolded}$1${normal}
./$1     
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong number of command line arguments"
echo "     $1 should show error message for incorrect number of arguments"
echo
echo
echo ${bolded}$1 -r${normal}
./$1 -r
echo
#
echo ${bolded}$1 -r1${normal}
./$1 -r1
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sp 1 -cl r blue${normal}
./$1 -r1 a4 -r2 23 -op 3a -sp 1 -cl r blue
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -cl r b -sp 1 -cl g -r1 f3${normal}
./$1 -r1 a4 -r2 23 -op 3a -cl r b -sp 1 -cl g -r1 f3
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong or bad radius 1 specifier"
echo "     $1 should show error message for incorrect r1 specifier"
echo
echo
#
echo ${bolded}$1 r1 a4 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 r1 a4 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -t1 a4 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -t1 a4 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r11 a4 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r11 a4 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r a4 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r a4 -r2 23 -op 3a -sp 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> bad r1 value"
echo "     $1 should show error message for incorrect r1 value"
echo
echo
#
echo ${bolded}$1 -r1 fh -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 fh -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 000v0 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 000v0 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 164 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 164 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 -1 -r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 -1 -r2 23 -op 3a -sp 1 -cl r
echo
#
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong or bad radius 2 specifier"
echo "     $1 should show error message for incorrect r2 specifier"
echo
echo
#
echo ${bolded}$1 -r1 a4 r2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 a4 r2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -t2 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -t2 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r22 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r22 23 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r 23 -op 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r 23 -op 3a -sp 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> bad r2 value"
echo "     $1 should show error message for incorrect r2 value"
echo
echo
#
echo ${bolded}$1 -r1 80 -r2 2d -op 3a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 2d -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 2+3 -op 3a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 2+3 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 164 -op 3a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 164 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 -2 -op 3a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 -2 -op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 0 -op 3a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 0 -op 3a -sp 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong or bad offset position specifier"
echo "     $1 should show error message for incorrect offset position specifier"
echo
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 op 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 op 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -np 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -np 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -opp 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -opp 3a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -o 3a -sp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -o 3a -sp 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> bad offset position value"
echo "     $1 should show error message for incorrect offset position value"
echo
echo
#
echo ${bolded}$1 -r1 80 -r2 2c -op 3e -sp 1 -cl r${normal}
./$1 -r1 80 -r2 2c -op 3e -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 23 -op 3?a -sp 1 -cl r${normal}
./$1 -r1 80 -r2 23 -op 3?a -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 164 -sp 1 -cl r${normal}
./$1 -r1 80 -r2 3c -op 164 -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op -3 -sp 1 -cl r${normal}
./$1 -r1 80 -r2 3c -op -3 -sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 0 -sp 1 -cl r${normal}
./$1 -r1 80 -r2 3c -op 0 -sp 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong or bad speed specifier"
echo "     $1 should show error message for incorrect speed specifier"
echo
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a sp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -op 3a sp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sr 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -op 3a -sr 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -spp 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -op 3a -spp 1 -cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -s 1 -cl r${normal}
./$1 -r1 a4 -r2 23 -op 3a -s 1 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> bad speed value"
echo "     $1 should show error message for incorrect speed value"
echo
echo
#
echo ${bolded}$1 -r1 80 -r2 2c -op a -sp 1d -cl r${normal}
./$1 -r1 80 -r2 2c -op a -sp 1d -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 23 -op 3a -sp 1. -cl r${normal}
./$1 -r1 80 -r2 23 -op 3a -sp 1. -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 163 -sp 7a -cl r${normal}
./$1 -r1 80 -r2 3c -op 163 -sp 7a -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 3a -sp -1 -cl r${normal}
./$1 -r1 80 -r2 3c -op 3a -sp -1 -cl r
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 3a -sp 0 -cl r${normal}
./$1 -r1 80 -r2 3c -op 3a -sp 0 -cl r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> wrong or color specifier"
echo "     $1 should show error message for incorrect color specifier"
echo
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sp 1 cl r${normal}
./$1 -r1 a4 -r2 23 -op 3a -sp 1 cl r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sp 1 -cm r${normal}
./$1 -r1 a4 -r2 23 -op 3a -sp 1 -cm r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sp 1 -cll r${normal}
./$1 -r1 a4 -r2 23 -op 3a -sp 1 -cll r
echo
#
echo ${bolded}$1 -r1 a4 -r2 23 -op 3a -sp 1 -c r${normal}
./$1 -r1 a4 -r2 23 -op 3a -sp 1 -c r
echo
#
pause $2
# ----------------------
#
echo "------------------------------------"
echo "Error testing -> bad color value"
echo "     $1 should show error message for incorrect color value"
echo
echo
#
echo ${bolded}$1 -r1 80 -r2 2c -op a -sp 1 -cl red${normal}
./$1 -r1 80 -r2 2c -op a -sp 1 -cl red
echo
#
echo ${bolded}$1 -r1 80 -r2 23 -op 3a -sp 1 -cl q${normal}
./$1 -r1 80 -r2 23 -op 3a -sp 1 -cl q
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 3c -sp 7a -cl wh${normal}
./$1 -r1 80 -r2 3c -op 3c -sp 7a -cl wh
echo
#
echo ${bolded}$1 -r1 80 -r2 3c -op 3a -sp 1 -cl -r${normal}
./$1 -r1 80 -r2 3c -op 3a -sp 1 -cl -r
echo
#
pause $2
#
fi
# ---------------------------------
# OK, final test is to display image
#
echo "------------------------------------"
echo "Final test -> display"
echo "     $1 should show image from assignment handout"
echo "     Type q or x to terminate"
echo
echo
echo ${bolded}$1 -r1 000c0 -r2 00031 -op 00000c0 -cl y${normal}
pause $2
./$1 -r1 000c0 -r2 00031 -op 000000c0 -sp 2 -cl y
# ./$1 -r1 00080 -r2 00010 -op 00000090 -sp 4 -cl p

